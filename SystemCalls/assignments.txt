Please clone https://github.com/embitude/lsp_lrm/  with:
     $ git clone https://github.com/embitude/lsp_lrm
Complete the below assignments in ls/SystemCalls:


1. Use access system call to check the read & write access for the file (Refer check_access.c)
done

2. Use access system call to check the executable permission for the file (Modify check_access.c)


3. Use fcntl to place the write lock on the file (Refer fcntl.c & complete the TODOS)


4. Use fcntl to place the read lock on the file and try the following:
  - Try running 2 programs with read lock and observe the behaviour
  - Try running one program with read lock and another write lock and observe the behaviour
    NOTE: Copy fnctl.c as fcntl_rd.c and make the above changes
5. Use fcntl to place the write lock on the file region (copy fcntl.c as fcntl_wrlk.c)
6. Get the status of the fcntl lock using F_GETLK (Enhance fcntl_wrlk.c)
    (i) Acquire the fcntl write lock only if status of lock shows as unlocked, otherwise keep on retrying till the lock is available make sure to
use the sleep during the busy waiting.
7. Use gettimeofday, localtime & strftime to display the time. (Refer print_time.c)
8. Use rlimit to limit the processor time for the process (Refer rlimit.c)
9. Use sysinfo to get the information such as uptime, Total RAM, Free RAM and process count (Refer sysinfo.c & complete all the todos)